name: Deploy Frontend to Vercel

on:
  push:
    branches:
      - main
    paths:
      - 'epl-analysis/**'
      - '.github/workflows/deploy-frontend.yml'
  workflow_dispatch:  # Allow manual triggering

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  # Lint and type check
  lint:
    name: Lint & Type Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: epl-analysis/package-lock.json

      - name: Install dependencies
        working-directory: epl-analysis
        run: npm ci

      - name: Run ESLint
        working-directory: epl-analysis
        run: npm run lint

      - name: Type check
        working-directory: epl-analysis
        run: npx tsc --noEmit

  # Deploy to Vercel
  deploy:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    needs: lint
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: epl-analysis/package-lock.json

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        working-directory: epl-analysis
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        working-directory: epl-analysis
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        id: deploy
        working-directory: epl-analysis
        run: |
          URL=$(vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }})
          echo "deployment_url=$URL" >> $GITHUB_OUTPUT
          echo "Deployment URL: $URL"

      - name: Comment deployment URL on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'üöÄ Deployed to Vercel: ${{ steps.deploy.outputs.deployment_url }}'
            })

  # Notify deployment status
  notify:
    name: Deployment Status
    runs-on: ubuntu-latest
    needs: [deploy]
    if: always()

    steps:
      - name: Deployment Success
        if: needs.deploy.result == 'success'
        run: |
          echo "üéâ ‚úÖ Frontend deployed successfully to Vercel!"
          echo "Live URL: https://your-project.vercel.app"

      - name: Deployment Failed
        if: needs.deploy.result == 'failure'
        run: |
          echo "‚ùå Frontend deployment failed!"
          echo "Check the logs above for details"
          exit 1
