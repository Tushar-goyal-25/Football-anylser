version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.1
    container_name: epl-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - epl-network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:7.7.1
    container_name: epl-kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    ports:
      - "9092:9092"
      - "29092:29092"
    networks:
      - epl-network
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 10s
      retries: 5

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: epl-kafka-ui
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_CLUSTERS_0_NAME: epl-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    ports:
      - "8080:8080"
    networks:
      - epl-network

  producer:
    build:
      context: ../services/producer
      dockerfile: Dockerfile
    container_name: epl-producer
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_TOPIC=epl.matches
      - FOOTBALL_API_KEY=${FOOTBALL_API_KEY:-}
    ports:
      - "8000:8000"
    networks:
      - epl-network
    restart: unless-stopped

  consumer:
    build:
      context: ../services/consumer
      dockerfile: Dockerfile
    container_name: epl-consumer
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_TOPIC=epl.matches
      - KAFKA_GROUP_ID=epl-consumer-group
      - CONVEX_URL=${CONVEX_URL:-}
      - CONVEX_DEPLOY_KEY=${CONVEX_DEPLOY_KEY:-}
      - AWS_REGION=us-east-1
      - DYNAMODB_TABLE=epl-live-matches
      - S3_BUCKET=epl-match-snapshots
      - USE_LOCAL_MOCK=true
    networks:
      - epl-network
    restart: unless-stopped

networks:
  epl-network:
    driver: bridge
